'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="school_mgm_db")>  _
Partial Public Class bindSourceDBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblStudentInfo(instance As tblStudentInfo)
    End Sub
  Partial Private Sub UpdatetblStudentInfo(instance As tblStudentInfo)
    End Sub
  Partial Private Sub DeletetblStudentInfo(instance As tblStudentInfo)
    End Sub
  Partial Private Sub InserttblSection(instance As tblSection)
    End Sub
  Partial Private Sub UpdatetblSection(instance As tblSection)
    End Sub
  Partial Private Sub DeletetblSection(instance As tblSection)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.School_Management_System.My.MySettings.Default.school_mgm_dbConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblStudentInfos() As System.Data.Linq.Table(Of tblStudentInfo)
		Get
			Return Me.GetTable(Of tblStudentInfo)
		End Get
	End Property
	
	Public ReadOnly Property tblSections() As System.Data.Linq.Table(Of tblSection)
		Get
			Return Me.GetTable(Of tblSection)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.get_section_data")>  _
	Public Function get_section_data(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal command As System.Nullable(Of Integer), <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(255)")> ByVal searchValue As String) As ISingleResult(Of get_section_dataResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), command, searchValue)
		Return CType(result.ReturnValue,ISingleResult(Of get_section_dataResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.get_enrolled_data")>  _
	Public Function get_enrolled_data(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(255)")> ByVal command As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(255)")> ByVal syID As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(255)")> ByVal sectionNo As String) As ISingleResult(Of get_enrolled_dataResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), command, syID, sectionNo)
		Return CType(result.ReturnValue,ISingleResult(Of get_enrolled_dataResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblStudentInfo")>  _
Partial Public Class tblStudentInfo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _studentID As String
	
	Private _pictureID As System.Data.Linq.Binary
	
	Private _lastname As String
	
	Private _firstname As String
	
	Private _MI As String
	
	Private _address As String
	
	Private _gender As String
	
	Private _birthDate As System.Nullable(Of Date)
	
	Private _birthPlace As String
	
	Private _maidenName As String
	
	Private _maidenCN As String
	
	Private _fatherName As String
	
	Private _fatherCN As String
	
	Private _emergencyName As String
	
	Private _emergencyCN As String
	
	Private _status As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnstudentIDChanging(value As String)
    End Sub
    Partial Private Sub OnstudentIDChanged()
    End Sub
    Partial Private Sub OnpictureIDChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnpictureIDChanged()
    End Sub
    Partial Private Sub OnlastnameChanging(value As String)
    End Sub
    Partial Private Sub OnlastnameChanged()
    End Sub
    Partial Private Sub OnfirstnameChanging(value As String)
    End Sub
    Partial Private Sub OnfirstnameChanged()
    End Sub
    Partial Private Sub OnMIChanging(value As String)
    End Sub
    Partial Private Sub OnMIChanged()
    End Sub
    Partial Private Sub OnaddressChanging(value As String)
    End Sub
    Partial Private Sub OnaddressChanged()
    End Sub
    Partial Private Sub OngenderChanging(value As String)
    End Sub
    Partial Private Sub OngenderChanged()
    End Sub
    Partial Private Sub OnbirthDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnbirthDateChanged()
    End Sub
    Partial Private Sub OnbirthPlaceChanging(value As String)
    End Sub
    Partial Private Sub OnbirthPlaceChanged()
    End Sub
    Partial Private Sub OnmaidenNameChanging(value As String)
    End Sub
    Partial Private Sub OnmaidenNameChanged()
    End Sub
    Partial Private Sub OnmaidenCNChanging(value As String)
    End Sub
    Partial Private Sub OnmaidenCNChanged()
    End Sub
    Partial Private Sub OnfatherNameChanging(value As String)
    End Sub
    Partial Private Sub OnfatherNameChanged()
    End Sub
    Partial Private Sub OnfatherCNChanging(value As String)
    End Sub
    Partial Private Sub OnfatherCNChanged()
    End Sub
    Partial Private Sub OnemergencyNameChanging(value As String)
    End Sub
    Partial Private Sub OnemergencyNameChanged()
    End Sub
    Partial Private Sub OnemergencyCNChanging(value As String)
    End Sub
    Partial Private Sub OnemergencyCNChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_studentID", DbType:="VarChar(255) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property studentID() As String
		Get
			Return Me._studentID
		End Get
		Set
			If (String.Equals(Me._studentID, value) = false) Then
				Me.OnstudentIDChanging(value)
				Me.SendPropertyChanging
				Me._studentID = value
				Me.SendPropertyChanged("studentID")
				Me.OnstudentIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pictureID", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property pictureID() As System.Data.Linq.Binary
		Get
			Return Me._pictureID
		End Get
		Set
			If (Object.Equals(Me._pictureID, value) = false) Then
				Me.OnpictureIDChanging(value)
				Me.SendPropertyChanging
				Me._pictureID = value
				Me.SendPropertyChanged("pictureID")
				Me.OnpictureIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lastname", DbType:="VarChar(255)")>  _
	Public Property lastname() As String
		Get
			Return Me._lastname
		End Get
		Set
			If (String.Equals(Me._lastname, value) = false) Then
				Me.OnlastnameChanging(value)
				Me.SendPropertyChanging
				Me._lastname = value
				Me.SendPropertyChanged("lastname")
				Me.OnlastnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_firstname", DbType:="VarChar(255)")>  _
	Public Property firstname() As String
		Get
			Return Me._firstname
		End Get
		Set
			If (String.Equals(Me._firstname, value) = false) Then
				Me.OnfirstnameChanging(value)
				Me.SendPropertyChanging
				Me._firstname = value
				Me.SendPropertyChanged("firstname")
				Me.OnfirstnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MI", DbType:="VarChar(255)")>  _
	Public Property MI() As String
		Get
			Return Me._MI
		End Get
		Set
			If (String.Equals(Me._MI, value) = false) Then
				Me.OnMIChanging(value)
				Me.SendPropertyChanging
				Me._MI = value
				Me.SendPropertyChanged("MI")
				Me.OnMIChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address", DbType:="VarChar(255)")>  _
	Public Property address() As String
		Get
			Return Me._address
		End Get
		Set
			If (String.Equals(Me._address, value) = false) Then
				Me.OnaddressChanging(value)
				Me.SendPropertyChanging
				Me._address = value
				Me.SendPropertyChanged("address")
				Me.OnaddressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gender", DbType:="VarChar(255)")>  _
	Public Property gender() As String
		Get
			Return Me._gender
		End Get
		Set
			If (String.Equals(Me._gender, value) = false) Then
				Me.OngenderChanging(value)
				Me.SendPropertyChanging
				Me._gender = value
				Me.SendPropertyChanged("gender")
				Me.OngenderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_birthDate", DbType:="DateTime2")>  _
	Public Property birthDate() As System.Nullable(Of Date)
		Get
			Return Me._birthDate
		End Get
		Set
			If (Me._birthDate.Equals(value) = false) Then
				Me.OnbirthDateChanging(value)
				Me.SendPropertyChanging
				Me._birthDate = value
				Me.SendPropertyChanged("birthDate")
				Me.OnbirthDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_birthPlace", DbType:="VarChar(255)")>  _
	Public Property birthPlace() As String
		Get
			Return Me._birthPlace
		End Get
		Set
			If (String.Equals(Me._birthPlace, value) = false) Then
				Me.OnbirthPlaceChanging(value)
				Me.SendPropertyChanging
				Me._birthPlace = value
				Me.SendPropertyChanged("birthPlace")
				Me.OnbirthPlaceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_maidenName", DbType:="VarChar(255)")>  _
	Public Property maidenName() As String
		Get
			Return Me._maidenName
		End Get
		Set
			If (String.Equals(Me._maidenName, value) = false) Then
				Me.OnmaidenNameChanging(value)
				Me.SendPropertyChanging
				Me._maidenName = value
				Me.SendPropertyChanged("maidenName")
				Me.OnmaidenNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_maidenCN", DbType:="VarChar(255)")>  _
	Public Property maidenCN() As String
		Get
			Return Me._maidenCN
		End Get
		Set
			If (String.Equals(Me._maidenCN, value) = false) Then
				Me.OnmaidenCNChanging(value)
				Me.SendPropertyChanging
				Me._maidenCN = value
				Me.SendPropertyChanged("maidenCN")
				Me.OnmaidenCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fatherName", DbType:="VarChar(255)")>  _
	Public Property fatherName() As String
		Get
			Return Me._fatherName
		End Get
		Set
			If (String.Equals(Me._fatherName, value) = false) Then
				Me.OnfatherNameChanging(value)
				Me.SendPropertyChanging
				Me._fatherName = value
				Me.SendPropertyChanged("fatherName")
				Me.OnfatherNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fatherCN", DbType:="VarChar(255)")>  _
	Public Property fatherCN() As String
		Get
			Return Me._fatherCN
		End Get
		Set
			If (String.Equals(Me._fatherCN, value) = false) Then
				Me.OnfatherCNChanging(value)
				Me.SendPropertyChanging
				Me._fatherCN = value
				Me.SendPropertyChanged("fatherCN")
				Me.OnfatherCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_emergencyName", DbType:="VarChar(255)")>  _
	Public Property emergencyName() As String
		Get
			Return Me._emergencyName
		End Get
		Set
			If (String.Equals(Me._emergencyName, value) = false) Then
				Me.OnemergencyNameChanging(value)
				Me.SendPropertyChanging
				Me._emergencyName = value
				Me.SendPropertyChanged("emergencyName")
				Me.OnemergencyNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_emergencyCN", DbType:="VarChar(255)")>  _
	Public Property emergencyCN() As String
		Get
			Return Me._emergencyCN
		End Get
		Set
			If (String.Equals(Me._emergencyCN, value) = false) Then
				Me.OnemergencyCNChanging(value)
				Me.SendPropertyChanging
				Me._emergencyCN = value
				Me.SendPropertyChanged("emergencyCN")
				Me.OnemergencyCNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(255)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblSection")>  _
Partial Public Class tblSection
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _sectionNo As String
	
	Private _sectionName As String
	
	Private _sectionGrade As String
	
	Private _maxStudCount As System.Nullable(Of Integer)
	
	Private _status As String
	
	Private _syID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnsectionNoChanging(value As String)
    End Sub
    Partial Private Sub OnsectionNoChanged()
    End Sub
    Partial Private Sub OnsectionNameChanging(value As String)
    End Sub
    Partial Private Sub OnsectionNameChanged()
    End Sub
    Partial Private Sub OnsectionGradeChanging(value As String)
    End Sub
    Partial Private Sub OnsectionGradeChanged()
    End Sub
    Partial Private Sub OnmaxStudCountChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnmaxStudCountChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub OnsyIDChanging(value As String)
    End Sub
    Partial Private Sub OnsyIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sectionNo", DbType:="VarChar(255) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property sectionNo() As String
		Get
			Return Me._sectionNo
		End Get
		Set
			If (String.Equals(Me._sectionNo, value) = false) Then
				Me.OnsectionNoChanging(value)
				Me.SendPropertyChanging
				Me._sectionNo = value
				Me.SendPropertyChanged("sectionNo")
				Me.OnsectionNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sectionName", DbType:="VarChar(255)")>  _
	Public Property sectionName() As String
		Get
			Return Me._sectionName
		End Get
		Set
			If (String.Equals(Me._sectionName, value) = false) Then
				Me.OnsectionNameChanging(value)
				Me.SendPropertyChanging
				Me._sectionName = value
				Me.SendPropertyChanged("sectionName")
				Me.OnsectionNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sectionGrade", DbType:="VarChar(255)")>  _
	Public Property sectionGrade() As String
		Get
			Return Me._sectionGrade
		End Get
		Set
			If (String.Equals(Me._sectionGrade, value) = false) Then
				Me.OnsectionGradeChanging(value)
				Me.SendPropertyChanging
				Me._sectionGrade = value
				Me.SendPropertyChanged("sectionGrade")
				Me.OnsectionGradeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_maxStudCount", DbType:="Int")>  _
	Public Property maxStudCount() As System.Nullable(Of Integer)
		Get
			Return Me._maxStudCount
		End Get
		Set
			If (Me._maxStudCount.Equals(value) = false) Then
				Me.OnmaxStudCountChanging(value)
				Me.SendPropertyChanging
				Me._maxStudCount = value
				Me.SendPropertyChanged("maxStudCount")
				Me.OnmaxStudCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(255)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syID", DbType:="VarChar(255)")>  _
	Public Property syID() As String
		Get
			Return Me._syID
		End Get
		Set
			If (String.Equals(Me._syID, value) = false) Then
				Me.OnsyIDChanging(value)
				Me.SendPropertyChanging
				Me._syID = value
				Me.SendPropertyChanged("syID")
				Me.OnsyIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class get_section_dataResult
	
	Private _sectionNo As String
	
	Private _sectionName As String
	
	Private _sectionGrade As String
	
	Private _maxStudCount As System.Nullable(Of Integer)
	
	Private _Student_Count As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sectionNo", DbType:="VarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property sectionNo() As String
		Get
			Return Me._sectionNo
		End Get
		Set
			If (String.Equals(Me._sectionNo, value) = false) Then
				Me._sectionNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sectionName", DbType:="VarChar(255)")>  _
	Public Property sectionName() As String
		Get
			Return Me._sectionName
		End Get
		Set
			If (String.Equals(Me._sectionName, value) = false) Then
				Me._sectionName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sectionGrade", DbType:="VarChar(255)")>  _
	Public Property sectionGrade() As String
		Get
			Return Me._sectionGrade
		End Get
		Set
			If (String.Equals(Me._sectionGrade, value) = false) Then
				Me._sectionGrade = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_maxStudCount", DbType:="Int")>  _
	Public Property maxStudCount() As System.Nullable(Of Integer)
		Get
			Return Me._maxStudCount
		End Get
		Set
			If (Me._maxStudCount.Equals(value) = false) Then
				Me._maxStudCount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Student_Count", DbType:="Int")>  _
	Public Property Student_Count() As System.Nullable(Of Integer)
		Get
			Return Me._Student_Count
		End Get
		Set
			If (Me._Student_Count.Equals(value) = false) Then
				Me._Student_Count = value
			End If
		End Set
	End Property
End Class

Partial Public Class get_enrolled_dataResult
	
	Private _ID As Integer
	
	Private _syID As String
	
	Private _sectionNo As String
	
	Private _studentID As String
	
	Private _remarks As String
	
	Private _status As String
	
	Private _sectionName As String
	
	Private _sectionGrade As String
	
	Private _maxStudCount As System.Nullable(Of Integer)
	
	Private _sec_status As String
	
	Private _pictureID As System.Data.Linq.Binary
	
	Private _lastname As String
	
	Private _firstname As String
	
	Private _MI As String
	
	Private _address As String
	
	Private _gender As String
	
	Private _birthDate As System.Nullable(Of Date)
	
	Private _birthPlace As String
	
	Private _maidenName As String
	
	Private _maidenCN As String
	
	Private _fatherName As String
	
	Private _fatherCN As String
	
	Private _emergencyName As String
	
	Private _emergencyCN As String
	
	Private _stud_status As String
	
	Private _yfrom As String
	
	Private _yto As String
	
	Private _principalName As String
	
	Private _sy_status As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL")>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me._ID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_syID", DbType:="VarChar(255)")>  _
	Public Property syID() As String
		Get
			Return Me._syID
		End Get
		Set
			If (String.Equals(Me._syID, value) = false) Then
				Me._syID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sectionNo", DbType:="VarChar(255)")>  _
	Public Property sectionNo() As String
		Get
			Return Me._sectionNo
		End Get
		Set
			If (String.Equals(Me._sectionNo, value) = false) Then
				Me._sectionNo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_studentID", DbType:="VarChar(255)")>  _
	Public Property studentID() As String
		Get
			Return Me._studentID
		End Get
		Set
			If (String.Equals(Me._studentID, value) = false) Then
				Me._studentID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remarks", DbType:="VarChar(255)")>  _
	Public Property remarks() As String
		Get
			Return Me._remarks
		End Get
		Set
			If (String.Equals(Me._remarks, value) = false) Then
				Me._remarks = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(255)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me._status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sectionName", DbType:="VarChar(255)")>  _
	Public Property sectionName() As String
		Get
			Return Me._sectionName
		End Get
		Set
			If (String.Equals(Me._sectionName, value) = false) Then
				Me._sectionName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sectionGrade", DbType:="VarChar(255)")>  _
	Public Property sectionGrade() As String
		Get
			Return Me._sectionGrade
		End Get
		Set
			If (String.Equals(Me._sectionGrade, value) = false) Then
				Me._sectionGrade = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_maxStudCount", DbType:="Int")>  _
	Public Property maxStudCount() As System.Nullable(Of Integer)
		Get
			Return Me._maxStudCount
		End Get
		Set
			If (Me._maxStudCount.Equals(value) = false) Then
				Me._maxStudCount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sec_status", DbType:="VarChar(255)")>  _
	Public Property sec_status() As String
		Get
			Return Me._sec_status
		End Get
		Set
			If (String.Equals(Me._sec_status, value) = false) Then
				Me._sec_status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pictureID", DbType:="VarBinary(MAX)")>  _
	Public Property pictureID() As System.Data.Linq.Binary
		Get
			Return Me._pictureID
		End Get
		Set
			If (Object.Equals(Me._pictureID, value) = false) Then
				Me._pictureID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lastname", DbType:="VarChar(255)")>  _
	Public Property lastname() As String
		Get
			Return Me._lastname
		End Get
		Set
			If (String.Equals(Me._lastname, value) = false) Then
				Me._lastname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_firstname", DbType:="VarChar(255)")>  _
	Public Property firstname() As String
		Get
			Return Me._firstname
		End Get
		Set
			If (String.Equals(Me._firstname, value) = false) Then
				Me._firstname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MI", DbType:="VarChar(255)")>  _
	Public Property MI() As String
		Get
			Return Me._MI
		End Get
		Set
			If (String.Equals(Me._MI, value) = false) Then
				Me._MI = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_address", DbType:="VarChar(255)")>  _
	Public Property address() As String
		Get
			Return Me._address
		End Get
		Set
			If (String.Equals(Me._address, value) = false) Then
				Me._address = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gender", DbType:="VarChar(255)")>  _
	Public Property gender() As String
		Get
			Return Me._gender
		End Get
		Set
			If (String.Equals(Me._gender, value) = false) Then
				Me._gender = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_birthDate", DbType:="DateTime2")>  _
	Public Property birthDate() As System.Nullable(Of Date)
		Get
			Return Me._birthDate
		End Get
		Set
			If (Me._birthDate.Equals(value) = false) Then
				Me._birthDate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_birthPlace", DbType:="VarChar(255)")>  _
	Public Property birthPlace() As String
		Get
			Return Me._birthPlace
		End Get
		Set
			If (String.Equals(Me._birthPlace, value) = false) Then
				Me._birthPlace = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_maidenName", DbType:="VarChar(255)")>  _
	Public Property maidenName() As String
		Get
			Return Me._maidenName
		End Get
		Set
			If (String.Equals(Me._maidenName, value) = false) Then
				Me._maidenName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_maidenCN", DbType:="VarChar(255)")>  _
	Public Property maidenCN() As String
		Get
			Return Me._maidenCN
		End Get
		Set
			If (String.Equals(Me._maidenCN, value) = false) Then
				Me._maidenCN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fatherName", DbType:="VarChar(255)")>  _
	Public Property fatherName() As String
		Get
			Return Me._fatherName
		End Get
		Set
			If (String.Equals(Me._fatherName, value) = false) Then
				Me._fatherName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fatherCN", DbType:="VarChar(255)")>  _
	Public Property fatherCN() As String
		Get
			Return Me._fatherCN
		End Get
		Set
			If (String.Equals(Me._fatherCN, value) = false) Then
				Me._fatherCN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_emergencyName", DbType:="VarChar(255)")>  _
	Public Property emergencyName() As String
		Get
			Return Me._emergencyName
		End Get
		Set
			If (String.Equals(Me._emergencyName, value) = false) Then
				Me._emergencyName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_emergencyCN", DbType:="VarChar(255)")>  _
	Public Property emergencyCN() As String
		Get
			Return Me._emergencyCN
		End Get
		Set
			If (String.Equals(Me._emergencyCN, value) = false) Then
				Me._emergencyCN = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stud_status", DbType:="VarChar(255)")>  _
	Public Property stud_status() As String
		Get
			Return Me._stud_status
		End Get
		Set
			If (String.Equals(Me._stud_status, value) = false) Then
				Me._stud_status = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yfrom", DbType:="VarChar(255)")>  _
	Public Property yfrom() As String
		Get
			Return Me._yfrom
		End Get
		Set
			If (String.Equals(Me._yfrom, value) = false) Then
				Me._yfrom = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_yto", DbType:="VarChar(255)")>  _
	Public Property yto() As String
		Get
			Return Me._yto
		End Get
		Set
			If (String.Equals(Me._yto, value) = false) Then
				Me._yto = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_principalName", DbType:="VarChar(255)")>  _
	Public Property principalName() As String
		Get
			Return Me._principalName
		End Get
		Set
			If (String.Equals(Me._principalName, value) = false) Then
				Me._principalName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sy_status", DbType:="VarChar(255)")>  _
	Public Property sy_status() As String
		Get
			Return Me._sy_status
		End Get
		Set
			If (String.Equals(Me._sy_status, value) = false) Then
				Me._sy_status = value
			End If
		End Set
	End Property
End Class
